// <auto-generated />
using System;
using BattelData.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BattelData.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20221213130449_Data")]
    partial class Data
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BattelData.Models.Battle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("BattelYear")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Battles");
                });

            modelBuilder.Entity("BattelData.Models.Horses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SamuraiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SamuraiId");

                    b.ToTable("Horses");
                });

            modelBuilder.Entity("BattelData.Models.Museum", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Museums");
                });

            modelBuilder.Entity("BattelData.Models.S_Battle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BattelID")
                        .HasColumnType("int");

                    b.Property<int>("BattleID")
                        .HasColumnType("int");

                    b.Property<int>("SamuraiID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BattleID");

                    b.HasIndex("SamuraiID");

                    b.ToTable("S_Battle");
                });

            modelBuilder.Entity("BattelData.Models.S_Musem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("MusemID")
                        .HasColumnType("int");

                    b.Property<int>("MuseumID")
                        .HasColumnType("int");

                    b.Property<int>("SamuraiID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MuseumID");

                    b.HasIndex("SamuraiID");

                    b.ToTable("S_Musem");
                });

            modelBuilder.Entity("BattelData.Models.Samurai", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Samurais");
                });

            modelBuilder.Entity("BattelData.Models.Weapon", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SamuraiID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SamuraiID");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("BattelData.Models.Horses", b =>
                {
                    b.HasOne("BattelData.Models.Samurai", "Samurai")
                        .WithMany("Horses")
                        .HasForeignKey("SamuraiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Samurai");
                });

            modelBuilder.Entity("BattelData.Models.S_Battle", b =>
                {
                    b.HasOne("BattelData.Models.Battle", "Battle")
                        .WithMany("S_Battle")
                        .HasForeignKey("BattleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BattelData.Models.Samurai", "Samurai")
                        .WithMany("S_Battle")
                        .HasForeignKey("SamuraiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Battle");

                    b.Navigation("Samurai");
                });

            modelBuilder.Entity("BattelData.Models.S_Musem", b =>
                {
                    b.HasOne("BattelData.Models.Museum", "Museum")
                        .WithMany("S_Musem")
                        .HasForeignKey("MuseumID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BattelData.Models.Samurai", "Samurai")
                        .WithMany("S_Musem")
                        .HasForeignKey("SamuraiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Museum");

                    b.Navigation("Samurai");
                });

            modelBuilder.Entity("BattelData.Models.Weapon", b =>
                {
                    b.HasOne("BattelData.Models.Samurai", "Samurai")
                        .WithMany("Weapons")
                        .HasForeignKey("SamuraiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Samurai");
                });

            modelBuilder.Entity("BattelData.Models.Battle", b =>
                {
                    b.Navigation("S_Battle");
                });

            modelBuilder.Entity("BattelData.Models.Museum", b =>
                {
                    b.Navigation("S_Musem");
                });

            modelBuilder.Entity("BattelData.Models.Samurai", b =>
                {
                    b.Navigation("Horses");

                    b.Navigation("S_Battle");

                    b.Navigation("S_Musem");

                    b.Navigation("Weapons");
                });
#pragma warning restore 612, 618
        }
    }
}
